Monday, May 13th, 2013: Added some of the basic action/result framework.
---------------------------------------------------
This includes concrete implementations for all immediately required results and a couple of the actions.  These can almost be glued together into a cohesive, running unit, although there's still a ways to go before this project is truly shippable.

Thursday, May 9th, 2013: Added configurability support through an interface to Java's built-in Property infrastructure.
---------------------------------------------------
This is a bit of a stretch, probably, in terms of engineering to the needs of the application.  The property system I built here is a stretch, but after messing with property systems for years, it's the one I wanted.  It supports strongly-typed constructs and custom parsing, as well as segregated property containers (all of which may draw either from the same or separate files/streams).

Sunday, May 5th, 2013: Added the search support classes.
---------------------------------------------------
The low-level search API is implemented and thus the barebones interaction with Lucene is complete.  From here, any changes to indexing and search at the low level will be primarily around schema changes and refactoring.

Wednesday, May 1st, 2013: Added the indexiSystem.out.println("Fetching and indexing Subversion logs");ng support classes.
---------------------------------------------------
Village Elder can now index source control revisions.  The interface to Lucene's Document class is clunky, in my opinion, but it's how they implemented their API so that's how I'm handling it until we decide that we need to get more flexible with the index schema.  Faceting is supported as well (and is, in fact, a requirement at this time).

Sunday, April 28th, 2013: Initial check-in
---------------------------------------------------
Contains libraries for sifting through source control logs, with a concrete implementation for Subversion.
